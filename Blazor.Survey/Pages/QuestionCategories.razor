@page "/QuestionCategories"

@using BlazorLearn.Services
@using BlazorLearn.Models.Entities

@inject IQuestionCategoryService questionService

<div class="row mb-2">
    <div class="col">
        <h5>Soru Kategorileri</h5>
    </div>
    <div class="col">
        <Button class="float-right" Type="primary" Icon="plus" @onclick="Add">Ekle</Button>
    </div>
</div>

<Table @ref="table"
       DataSource="@questionCategories"
       Bordered="true"
       Total="total"
       Loading="loading"
       @bind-PageIndex="pageIndex"
       @bind-PageSize="pageSize"
       OnPageIndexChange="pageIndexChange">
    <ActionColumn Width="100">
        <Space>
            <SpaceItem>
                <Button OnClick="()=>Edit(context)">Düzenle</Button>
            </SpaceItem>
            <SpaceItem>
                <Button Danger OnClick="()=>Delete(context.Id)">Sil</Button>
            </SpaceItem>
        </Space>
    </ActionColumn>
    <Column @bind-Field="@context.Name" Title="Kategori Adı" />
</Table>


@{
    RenderFragment footer = @<Template>
        <Button OnClick="@Cancel" @key="@("back")">Kapat</Button>
        <Button OnClick="@Save" @key="@("submit")"
                Type="primary">
            Kaydet
        </Button>
    </Template>;
}

<Modal Title="@modalTitle"
       Visible="@modalVisible"
       OnOk="@Save"
       OnCancel="@Cancel"
       Footer="@footer">
    <EditForm EditContext="@editContext" OnValidSubmit="@Save">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>Kategori Adı</label>
            <Input Placeholder="Kategori Adı" @bind-Value="questionCategory.Name" />
        </div>
        <div class="form-group">
            <label>Aktif</label>
            <Switch Checked="questionCategory.IsActive" />
        </div>
    </EditForm>
</Modal>

@code {
    ITable table;

    int pageIndex = 1;
    int pageSize = 5;
    int total = 0;
    bool loading = true;

    QuestionCategory questionCategory = new QuestionCategory();
    EditContext editContext;

    string modalTitle = string.Empty;
    bool modalVisible = false;

    private IList<QuestionCategory> questionCategories;

    protected override void OnInitialized()
    {
        editContext = new EditContext(questionCategory);
        LoadData();
    }

    private void LoadData()
    {
        var result = questionService.Get(pageIndex, pageSize);
        questionCategories = result.Results;
        total = result.RowCount;
        loading = false;
    }

    private void Add()
    {
        modalVisible = true;
        modalTitle = "Soru Kategorisi Ekle";
    }

    private void Edit(QuestionCategory model)
    {
        modalVisible = true;
        modalTitle = "Soru Kategorisi Düzenle";
        questionCategory = model;
        editContext = new EditContext(model);
    }

    private void Delete(int id)
    {
    }

    private void pageIndexChange(PaginationEventArgs args)
    {
        pageIndex = args.PageIndex;
        LoadData();
    }

    private void Save()
    {
        if (editContext.Validate())
        {
            if (questionCategory.Id == 0)
            {
                questionService.Add(questionCategory);
            }
            else
            {
                questionService.Edit(questionCategory);
            }
            modalVisible = false;
            LoadData();
        }
    }

    private void Cancel()
    {
        modalVisible = false;
    }
}
